{"version":3,"sources":["components/NavBar/SocialMedia.js","components/Routes/TabPanel.js","components/Constant/ProjectsList.js","lang/Dictionary.js","lang/en.js","lang/pl.js","lang/LangaugeContext.js","components/TextLang.js","components/Routes/Home.js","components/Cards/AboutCard.js","components/Cards/AboutDetails.js","components/Constant/Technologies.js","components/Cards/AboutTechs.js","components/Constant/Tools.js","components/Cards/AboutTools.js","components/Routes/About.js","components/Cards/ProjectCard.js","components/Cards/ProjectDetailsCard.js","components/ProjectDetails.js","components/Project.js","components/Routes/Projects.js","components/Routes/MenuTabs.js","components/NavBar/LanguageSelector.js","components/NavBar/MenuNavBar.js","components/NavBar/MenuNavBarMobile.js","components/RavensuAppBar.js","components/Routes/Contact.js","components/MainContentRouter.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","socialMediaDiv","display","socialMediaIcon","marginRight","spacing","marginLeft","SocialMedia","props","classes","className","Link","target","href","style","textDecoration","color","TabPanel","children","value","index","other","Typography","component","role","hidden","id","tabControl","Box","p","marginTop","ProjectsList","key","name","pictureSrc","technologiesIndexes","github","descShort","TextLang","textId","desc","dictionaryList","en","projectList","ProjectList","navHome","navAbout","navProjects","navContact","homeHeader","homeDescLine1","homeDescLine2","homeDescLine3","aboutPlace","aboutJob","aboutEdu","aboutLang","aboutMeHeader","aboutDetails","aboutTechnologiesHeader","aboutDevToolsHeader","aboutMethodologies","projectsHeader","contactHeader","contactInputSubject","contactInputName","contactInputEmail","contactInputMessage","contactSendButton","projectShortDescRavensu","projectLongDescRavensu","projectShortDescDownhillPay","projectLongDescDownhillPay","pl","languageOptions","text","LangaugeContext","createContext","language","dictionary","LanguageProvider","langaugeContext","useContext","useState","setLanguage","setDictionary","provider","selectedLanguage","Provider","paper","padding","backgroundColor","opacity","boxShadow","rootContainer","width","breakpoints","down","typographyHeader","fontFamily","fontWeight","typographyH6","whiteSpace","Home","responsiveFonts","createMuiTheme","responsiveFontSizes","Container","Paper","elevation","ThemeProvider","variant","paragraph","align","card","avatar","height","icon","fontSize","dividerColor","AvatarContent","React","handleImageLoaded","alert","Grid","container","direction","justify","alignItems","item","Avatar","src","alt","alignSelf","onLoad","bind","Divider","root","flexItem","CardContentGrid","CardContentGridDescriptionElement","AboutCard","Card","CardContent","alignContent","AboutDetails","Technologies","lvl","TechChips","console","log","array","map","TechChip","Chip","label","margin","AboutTechs","Tools","ToolChips","ToolChip","AboutTools","aboutCardRoot","maxWidth","up","About","xs","sm","md","lg","media","ProjectCard","projectId","onClick","CardActionArea","CardMedia","image","indexes","langs","currentValue","push","programmingLanguages","currentLang","Tooltip","placement","title","backgroundPositionX","backgroundPositionY","backgroundRepeat","backgroundSize","imgProps","ShowLanguages","gutterBottom","withRouter","ProjectIndex","only","techContainer","position","bottom","img","marginBottom","techImg","textContainer","Title","Description","TechnologiesList","ProjectDetails","textAlign","classname","muiTheme","rootGrid","techGrid","maxHeight","typography","Project","header","containerCard","toggleProjectDetailsDrawer","isOpen","event","type","setProjectDetailsDrawerState","projectDetailsDrawerState","selectedProjectState","setSelectedProjectState","displayProjectCards","SwipeableDrawer","open","onOpen","onClose","anchor","tabs","tabsIndicator","tab","grow","flexGrow","appBar","menuButton","withWidth","isMobile","test","projectName","setProjectName","tabsProps","orientation","Tabs","path","history","location","pathname","match","length","firstOccurence","indexOf","secondOccurence","substring","parentPath","onChange","newValue","indicator","textColor","Tab","disableTouchRipple","Grow","in","timeout","LangaugeSelector","anchorEl","setAnchorEl","handleClose","Button","currentTarget","startIcon","minWidth","Menu","keepMounted","Boolean","MenuItem","languageId","find","selectLangauge","tabValueFromPath","tabValue","setTabValue","to","state","about","appBarDiv","background","drawerContent","DrawerContent","List","ListItem","ListItemText","primary","button","itemOnClickCallback","ListItemIcon","MenuNavBarMobile","menuDrawerState","setMenuDrawerState","toggleMenuDrawer","AppBar","Toolbar","IconButton","edge","toolbarInside","socialMedia","AppBarNormal","isWidthUp","textfieldRoot","textField","borderRadius","textFieldMessage","emailSendingDialogRoot","textFieldTheme","palette","blue","ColoredCircularProgress","withStyles","CircularProgress","EmailSendingDialog","showSendingEmailProgress","showEmailSendSuccedIcon","showEmailSendFailIcon","Dialog","PaperProps","size","EmailSentErrorDialog","errorCode","errorMessage","errorDialogContent","errorStack","DialogTitle","DialogContent","DialogContentText","DialogActions","Contact","emailSendingNotificationTimer","useRef","setName","email","setEmail","subject","setSubject","message","setMessage","isEmailSendingDialogOpen","setEmailSendingDialogOpen","setShowSendingEmailProgress","setShowEmailSendSuccedIcon","setShowEmailSendFailIcon","isEmailSentErrorDialogOpen","setIsEmailSentErrorDialogOpen","useEffect","clearTimeout","current","mailData","onSubmit","e","preventDefault","axios","post","process","headers","then","response","data","status","setTimeout","catch","err","code","stack","this","TextField","required","multiline","rows","endIcon","RenderRoute","showAnimation","mount","setMount","MainContentRouter","useRouteMatch","useLocation","exact","app","top","left","siteContent","App","styles","zIndex","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.95558db9.chunk.js","sourcesContent":["import React from 'react'\r\nimport InstagramIcon from '@material-ui/icons/Instagram';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\nimport {makeStyles, Link, Button} from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    socialMediaDiv : {\r\n        //marginTop: theme.spacing(1),\r\n        display: 'flex'\r\n    },\r\n\r\n    socialMediaIcon : {\r\n        marginRight: theme.spacing(1.8),\r\n        marginLeft: theme.spacing(1.8)\r\n    }\r\n\r\n}));\r\n\r\n\r\nfunction SocialMedia(props){\r\n    const classes = useStyles();\r\n    return(\r\n        <div className = {classes.socialMediaDiv}> \r\n            <Link target = \"_blank\" href = \"https://www.instagram.com/raven.brt\" style = {{textDecoration: \"none\", color: \"#ffffff\"}} color = \"textSecondary\">\r\n                <InstagramIcon className = {classes.socialMediaIcon}/>\r\n            </Link>       \r\n            <Link target = \"_blank\" href = \"https://www.linkedin.com/in/bartosz-baum-1aa12419a/\" style = {{textDecoration: \"none\", color: \"#ffffff\"}} color = \"textSecondary\">\r\n                <LinkedInIcon className = {classes.socialMediaIcon}/>\r\n            </Link>       \r\n            <Link target = \"_blank\" href = \"https://github.com/Raven351\" style = {{textDecoration: \"none\", color: \"#ffffff\"}} color = \"textSecondary\">\r\n                <GitHubIcon className = {classes.socialMediaIcon}/>\r\n            </Link>       \r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default SocialMedia","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Box } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n    return (\r\n    <Typography \r\n    component=\"div\" \r\n    role=\"tabpanel\" \r\n    hidden={value !== index} \r\n    id={`tabpanel-${index}`} \r\n    tabControl={`tab-${index}`} \r\n    {...other}>\r\n        {value === index && <Box p={3} style = {{marginTop: 50}}>{children}</Box>}\r\n    </Typography>);\r\n}\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired\r\n};\r\n\r\nexport default TabPanel\r\n","import React from 'react'\r\nimport TextLang from '../TextLang'\r\nconst ProjectsList = [\r\n    { \r\n        key: 0, \r\n        name: \"ravensu\",  \r\n        pictureSrc:  \"/img/ProjectsPictures/ravensu.png\",\r\n        technologiesIndexes: [7,8,9,10],\r\n        github: \"https://github.com/Raven351/ravensu\",\r\n        descShort: <TextLang textId = \"projectShortDescRavensu\"/>,\r\n        desc: <TextLang textId = \"projectLongDescRavensu\"/>,\r\n    },\r\n    { \r\n        key: 1, \r\n        name: \"DownhillPay\",  \r\n        pictureSrc:  \"/img/ProjectsPictures/downhillpay.png\",\r\n        technologiesIndexes: [0,2,3,4, 5,6],\r\n        github: \"https://github.com/Raven351/DownhillPay\",\r\n        descShort: <TextLang textId = \"projectShortDescDownhillPay\"/>,\r\n        desc: <TextLang textId = \"projectLongDescDownhillPay\"/>\r\n    },\r\n]\r\n\r\nexport default ProjectsList","import en from './en'\r\nimport pl from './pl'\r\nimport jp from './jp'\r\n\r\nexport const dictionaryList = {\r\n    en,\r\n    pl,\r\n    // jp\r\n} \r\n\r\nexport const languageOptions = [\r\n    {id: 'en', text: 'English'},\r\n    {id: 'pl', text: 'Polski'},\r\n    // {id: 'jp', text: '日本語'}\r\n]","import ProjectList from '../components/Constant/ProjectsList'\r\nconst en = {\r\n    projectList : {ProjectList},\r\n    navHome : \"Home\",\r\n    navAbout : \"About\",\r\n    navProjects : \"Sample projects\",\r\n    navContact : \"Contact\",\r\n\r\n    homeHeader : \"Hello and welcome to \",\r\n    homeDescLine1 : \"My name is Bart and I am graduate of IT engineering studies focused on programming.\",\r\n    homeDescLine2 : \"On this website you can find more information about me, technologies I work with and projects I've made.\",\r\n    homeDescLine3 : \"For any inquiries please reach me through contact form.\",\r\n\r\n    aboutPlace: \"Gdańsk - Poland\",\r\n    aboutJob: \"Freelancer\\nJunior Level\\nAvailable for hire\",\r\n    aboutEdu: \"IT Engineer Degree\",\r\n    aboutLang: \"Polish - Native\\nEnglish - Advanced (C1)\\nJapanese - Basic (N4)\",\r\n    aboutMeHeader: \"About me\",\r\n    aboutDetails: \"Bachelor of IT engineering focused on software development and skilled in programming using various languages. I've gained my knowledge mostly through making projects both during my studies and as a hobby.\\n\\nI want to specialize in web application development and I always try to learn new things in this field through futher self-learning, new experiences and new projects.\\n\\nI also intend to start weekend master degree studies since October this year.\\n\\nFor any inquiries or offers please refer to contact form available on this website. \",\r\n    aboutTechnologiesHeader: \"Technologies I work with\",\r\n    aboutDevToolsHeader: \"Tools I use\",\r\n    aboutMethodologies: \"Agile methodologies and Design Patterns I got to know\",\r\n\r\n    projectsHeader: \"Projects\",\r\n\r\n    contactHeader :\"Contact\",\r\n    contactInputSubject : \"Subject\",\r\n    contactInputName : \"Name\",\r\n    contactInputEmail :\"Email\",\r\n    contactInputMessage : \"Message\",\r\n    contactSendButton : \"SEND\",\r\n\r\n    //PROJECTS\r\n    projectShortDescRavensu: \"Personal website which you are visiting right now.\",\r\n    projectLongDescRavensu: \"Personal website for purpose of self presentation, presentation of projects I've been working on, but also in order to increase skills with used language and technology. It's been made with JavaScript and React with focus on clear presentation and proper responsivity.\", \r\n    \r\n    projectShortDescDownhillPay: \"Thesis project. Skiing payment system that uses RFID cards.\",\r\n    projectLongDescDownhillPay: \"Thesis project. Skiing payment system that uses RFID cards.\\n This project includes C# client app for card registration and top-ups, PostgreSQL DB scripts, REST API generated through postgREST software, and C++ program for Arduino which is used as cards reader for client app. \\n I've been working on this project individually and used Git as a version control tool. Created client application is object-oriented and uses WPF. It also uses RESTSharp library in order to communicate with REST API provided by postgREST\", \r\n}\r\n\r\nexport default en","const pl = {\r\n    navHome : \"Strona główna\",\r\n    navAbout : \"O mnie\",\r\n    navProjects : \"Przykładowe projekty\",\r\n    navContact : \"Kontakt\",\r\n\r\n    homeHeader : \"Cześć. Witaj na \",\r\n    homeDescLine1 : \"Mam na imię Bartek i jestem absolewnetem studiów inżynierskich z informatyki o specjalizacji programowanie.\",\r\n    homeDescLine2 : \"Na tej stronie znajdziesz więcej informacji o mnie, technologiach jakich używam oraz projektach jakie wykonałem.\",\r\n    homeDescLine3 : \"W przypadku jakichkolwiek pytań bądź chęci nawiązania współpracy, możesz do mnie napisać przy pomocy formularza kontaktowego.\",\r\n\r\n    aboutPlace: \"Gdańsk - Polska\",\r\n    aboutJob: \"Freelancer\\nPoziom Junior\\nMożliwy do zatrudnienia\",\r\n    aboutEdu: \"Inżynier Informatyk\",\r\n    aboutLang: \"Polski - Ojczysty\\nAngielski - Zaawansowany (C1)\\nJapoński - Podstawowy (N4)\",\r\n    aboutMeHeader: \"O mnie\",\r\n    aboutDetails: \"Absolwent studiów inżynierskich o kierunku informatyka i specjalizacji programowanie. Umiejętności programowania w poszczególnych językach uzyskałem w trakcie studiów oraz poprzez samodzielną naukę w ramach prywatnie realizowanych projektów hobbistycznych.\\n\\nDziedziną w której chcę się specjalizować jest inżyniera aplikacji internetowych i obecnie w dalszym ciągu staram się pogłębiać swoją wiedzę i umiejętności w zakresie rozwoju oprogramowania m.in. poprzez szkolenie się i dalszą realizację prywatnych oraz zleconych projektów.\\n\\nOd października br. planuję również dalszą edukację na studiach magisterskich w trybie zaocznym.\\n\\n W celu chęci podjęcia współpracy, proszę o kontakt poprzez formularz umieszczony na niniejszej stronie.\",\r\n    aboutTechnologiesHeader: \"Technologie których używam\",\r\n    aboutDevToolsHeader: \"Narzędzia z których korzystam\",\r\n    aboutMethodologies: \"Metodologie Agile i wzorce projektowe które poznałem\",\r\n\r\n    projectsHeader: \"Projekty\",\r\n\r\n    contactHeader :\"Kontakt\",\r\n    contactInputSubject : \"Temat\",\r\n    contactInputName : \"Imię i nazwisko\",\r\n    contactInputEmail :\"Email\",\r\n    contactInputMessage : \"Wiadomość\",\r\n    contactSendButton : \"Wyślij\",\r\n\r\n    //PROJECTS\r\n    projectShortDescRavensu: \"Osobista strona internetowa na której się znajdujesz.\",\r\n    projectLongDescRavensu: \"Prywatna strona internetowa tworzona na potrzeby prezentacji osobistej, prezentacji utworzonych projektów, a także w celu zwiększenia umiejętności w zakresie używanego języka i technologii.  Pisana w języku JavaScript, oparta o technologię React i tworzona z naciskiem na przejrzystą prezentacje treści i należytą responsywność.\", \r\n\r\n    projectShortDescDownhillPay: \"Projekt inżynierski. System płatności używający kard RFID w scenariuszu zakładającym obsługę wyciągów narcarskich.\",\r\n    projectLongDescDownhillPay: \"Projekt zawiera aplikacje kliencką w języku C# służącą rejestracji nowych kart oraz ich doładowań, bazę danych w systemie PostgreSQL i skrypty ją tworzące, REST API generowane za pomocą programu postgREST, program dla Arduino napisany w języku C++ do obsługi czytnika i komunikacji z aplikacją kliencką.\\nProjekt został utworzony indywidualnie przeze mnie i w trakcie jego tworzenia wykorzystano system kontroli wersji GIT. Utworzona aplikacja kliencka jest wytworzona w sposób obiektowy i korzysta z technologii WPF do obsługi interfejsu graficznego. Aplikacja wykorzystuje również bibliotekę RESTSharp w celu zapewnienia komunikacji z REST API udostępnianym przez postgREST. \", \r\n}\r\n\r\nexport default pl","import {languageOptions, dictionaryList} from './Dictionary'\r\nimport React, { useEffect } from 'react'\r\nimport { createContext, useContext, useState } from 'react'\r\nimport axios from 'axios'\r\n\r\nfunction getGeoInfo() {\r\n    axios.get('https://ipapi.co/json/').then((response) => {\r\n        let data = response.data;\r\n        data.country_code.toLowerCase();\r\n        return data.country_code;\r\n    }).catch((error) => {\r\n        console.log(error);\r\n        return null;    \r\n    });\r\n}\r\n\r\nexport const LangaugeContext = createContext({\r\n    language: languageOptions[0],\r\n    dictionary: dictionaryList[languageOptions[0].id]\r\n});\r\n\r\nexport function LanguageProvider(props){\r\n    const langaugeContext = useContext(LangaugeContext);\r\n    const [language, setLanguage] = useState(langaugeContext.language);\r\n    const [dictionary, setDictionary] = useState(langaugeContext.dictionary);\r\n    // useEffect(() => {\r\n    //     if (getGeoInfo != null && getGeoInfo != undefined){\r\n    //         const countryCode = getGeoInfo();\r\n    //         getGeoInfo();\r\n    //         alert(countryCode);\r\n    //         const regionLanguage = languageOptions.find(item => item.id === getGeoInfo());\r\n    //         //alert(getGeoInfo())\r\n    //     }\r\n    // })\r\n    const provider = {\r\n        language,\r\n        dictionary,\r\n        setLanguage: (selectedLanguage) => {\r\n            setLanguage(selectedLanguage);\r\n            setDictionary(dictionaryList[selectedLanguage.id]);\r\n        }\r\n    };\r\n    return(\r\n        <LangaugeContext.Provider value = {provider}>\r\n            {props.children}\r\n        </LangaugeContext.Provider>\r\n    )\r\n}","import React from 'react'\r\nimport { useContext } from \"react\";\r\nimport { LangaugeContext } from \"../lang/LangaugeContext\";\r\nimport {Box, Typography} from '@material-ui/core'\r\n\r\nexport default function TextLang(props){\r\n    const languageContext = useContext(LangaugeContext);\r\n    return languageContext.dictionary[props.textId];\r\n}","import React from 'react'\r\nimport {Paper, makeStyles, Typography, ThemeProvider, Container} from '@material-ui/core'\r\nimport { createMuiTheme, responsiveFontSizes } from '@material-ui/core/styles';\r\nimport TextLang from '../TextLang';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n        padding: 20,\r\n        color: \"#ffffff\",\r\n        //backgroundColor: \"#ebebeb\",\r\n        backgroundColor: \"transparent\",\r\n        opacity: \"86%\",\r\n        boxShadow: 10,\r\n        \r\n    },\r\n    rootContainer: {\r\n        width: \"100vw\",\r\n        marginTop: \"150px\",\r\n        [theme.breakpoints.down('sm')]:{\r\n            marginTop: \"90px\"\r\n        }\r\n    },\r\n    typographyHeader:{\r\n        fontFamily: '\"Balsamiq Sans\"', \r\n        fontWeight: 700,\r\n    },\r\n    typographyH6:{\r\n        fontFamily: '\"Balsamiq Sans\"', \r\n        whiteSpace: \"pre-line\", \r\n        marginTop: 50, \r\n        marginLeft: 40, \r\n        fontWeight: 700\r\n    }\r\n\r\n    \r\n}));\r\nexport default function Home(){\r\nconst classes = useStyles();\r\nlet responsiveFonts = createMuiTheme();\r\nresponsiveFonts = responsiveFontSizes(responsiveFonts);\r\n    return(\r\n        <Container className = {classes.rootContainer}>\r\n            <Paper className = {classes.paper} elevation = \"0\">\r\n                <ThemeProvider theme = {responsiveFonts}>\r\n                    <Typography\r\n                        variant = \"h3\"\r\n                        component = \"h1\"\r\n                        paragraph = \"true\"\r\n                        className = {classes.typographyHeader}\r\n                        align = \"left\"\r\n                    >\r\n                        <TextLang textId = \"homeHeader\"/>\r\n                        <span className = {classes.typographyHeader} style= {{color: \"#14e0ff\"}}>dev.ravensu.com</span>\r\n                    </Typography>\r\n                    <Typography\r\n                        variant = \"h6\"\r\n                        component= \"p\"\r\n                        className = {classes.typographyH6}\r\n                        align = \"left\"\r\n                    >\r\n                        <TextLang textId = \"homeDescLine1\"/>\r\n                    </Typography>\r\n                    <Typography\r\n                        variant = \"h6\"\r\n                        component= \"p\"\r\n                        className = {classes.typographyH6}\r\n                        style = {{marginLeft: \"80px\"}}\r\n                        align = \"left\"\r\n                    >\r\n                        <TextLang textId = \"homeDescLine2\"/>\r\n                    </Typography>\r\n                    <Typography\r\n                        variant = \"h6\"\r\n                        component= \"p\"\r\n                        className = {classes.typographyH6}\r\n                        style = {{marginLeft: \"120px\"}}\r\n                        align = \"left\"\r\n                    >\r\n                        <TextLang textId = \"homeDescLine3\"/>\r\n                    </Typography>\r\n                </ThemeProvider>\r\n            </Paper> \r\n        </Container>\r\n    )\r\n}","import React from 'react'\r\nimport {Box, Paper, makeStyles, Typography, CardHeader, Avatar, CardContent, Grid, Divider} from '@material-ui/core'\r\nimport Card from '@material-ui/core/Card'\r\nimport SchoolRoundedIcon from '@material-ui/icons/SchoolRounded';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport SchoolIcon from '@material-ui/icons/School';\r\nimport SmsIcon from '@material-ui/icons/Sms';\r\nimport WorkIcon from '@material-ui/icons/Work';\r\nimport TextLang from '../TextLang'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n        color: \"#000000\",\r\n        backgroundColor: \"#ebebeb\",\r\n        opacity: \"86%\",\r\n        boxShadow: 10,\r\n    },\r\n\r\n    card: {\r\n        //backgroundColor: \"transparent\"\r\n    },\r\n\r\n    avatar:{\r\n        backgroundColor: \"#000000\",\r\n        width: theme.spacing(20),\r\n        height: theme.spacing(20)\r\n    },\r\n\r\n    icon:{\r\n        fontSize: 80,\r\n    },\r\n\r\n    dividerColor:{\r\n        backgroundColor: \"#000000\",\r\n        color: \"#000000\",\r\n        height: 1\r\n    }\r\n\r\n}));\r\n\r\nfunction AvatarContent(){\r\n    const classes = useStyles()\r\n    const [isAvatarLoaded, setIsAvatarLoaded] = React.useState(false);\r\n    const handleImageLoaded = () => {\r\n        setIsAvatarLoaded =true;\r\n        alert(\"state set\");\r\n    }\r\n\r\n    return(\r\n        <Grid \r\n        container\r\n        display = \"flex\"\r\n        direction = \"column\"\r\n        justify = \"center\"\r\n        alignItems = \"center\"\r\n        >\r\n            <Grid item style = {{padding: 2}}>\r\n                <Avatar className = {classes.avatar} src={\"/img/profilepicture.jpg\"} alt=\"Bartosz Baum\" style = {{alignSelf: \"center\"}} onLoad = {() => handleImageLoaded.bind(this)}/>\r\n            </Grid>\r\n            \r\n            <Divider variant = \"fullWidth\" classes = {{root: classes.dividerColor}} flexItem = \"true\" />\r\n\r\n            <Grid item style = {{marginTop: 10}}>\r\n                <Typography\r\n                variant = \"h5\"\r\n                component = \"h1\"\r\n                >\r\n                Bartosz Baum<br/>\r\n                </Typography>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nfunction CardContentGrid(props){\r\n    return(\r\n        <Grid\r\n        display = \"flex\"\r\n        direction = \"column\"\r\n        justify = \"flex-start\"\r\n        alignItems = \"flex-start\"\r\n        >\r\n            {props.children}\r\n        </Grid>\r\n    );\r\n}\r\n\r\nfunction CardContentGridDescriptionElement(props){\r\n    return(\r\n        <Grid \r\n        container\r\n        display = \"flex\"\r\n        direction = \"column\"\r\n        justify = \"center\"\r\n        alignItems = \"center\"\r\n        >\r\n            {props.children}\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default function AboutCard(){\r\n    const classes = useStyles();\r\n    return ( \r\n        <Card className = {classes.card}>\r\n            <CardContent style={{alignContent: \"center\"}}>\r\n                <AvatarContent/>\r\n                <CardContentGrid>            \r\n                    <CardContentGridDescriptionElement>\r\n                        <Grid item style = {{marginTop: 20}}>\r\n                            <HomeIcon/> \r\n                        </Grid>\r\n                        <Grid item >\r\n                            <Typography\r\n                            variant = \"body1\"\r\n                            align = \"center\"\r\n                            style ={{color: \"#000000\"}}                    \r\n                            >\r\n                                <TextLang textId = \"aboutPlace\"/>\r\n                            </Typography>\r\n                        </Grid>\r\n                    </CardContentGridDescriptionElement>\r\n                    <CardContentGridDescriptionElement >\r\n                        <Grid item style = {{marginTop: 20}} >\r\n                            <WorkIcon/> \r\n                        </Grid>\r\n                        <Grid item >\r\n                            <Typography\r\n                            variant = \"body1\"\r\n                            align = \"center\"\r\n                            style = {{whiteSpace: \"pre-line\"}}                     \r\n                            >\r\n                                <TextLang textId = \"aboutJob\"/>\r\n                            </Typography>\r\n                        </Grid>\r\n                    </CardContentGridDescriptionElement>\r\n                    <CardContentGridDescriptionElement>\r\n                        <Grid item style = {{marginTop: 20}}>\r\n                            <SchoolIcon/> \r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Typography\r\n                            variant = \"body1\"\r\n                            align = \"center\"   \r\n                            style = {{whiteSpace: \"pre-line\"}}                  \r\n                            >\r\n                            <TextLang textId = \"aboutEdu\"/>\r\n                            </Typography>\r\n                        </Grid>\r\n                    </CardContentGridDescriptionElement>\r\n                    <CardContentGridDescriptionElement >\r\n                        <Grid item style = {{marginTop: 20}} >\r\n                            <SmsIcon/> \r\n                        </Grid>\r\n                        <Grid item >\r\n                            <Typography\r\n                            variant = \"body1\"\r\n                            align = \"center\"\r\n                            style = {{whiteSpace: \"pre-line\"}}                     \r\n                            >\r\n                                <TextLang textId = \"aboutLang\"/>\r\n                            </Typography>\r\n                        </Grid>\r\n                    </CardContentGridDescriptionElement>\r\n\r\n                </CardContentGrid>\r\n\r\n            </CardContent>\r\n        </Card> \r\n    ); \r\n}","import React from 'react'\r\nimport {Box, Typography, Paper} from '@material-ui/core'\r\nimport TextLang from '../../components/TextLang'\r\n\r\n\r\nexport default function AboutDetails(){\r\n    return(\r\n        <>\r\n            <Typography\r\n                variant = \"h4\"\r\n                component = \"h1\"\r\n                paragraph = \"true\"\r\n            >\r\n                <TextLang textId = \"aboutMeHeader\"/>\r\n            </Typography>\r\n            <Typography\r\n                variant = \"body1\"\r\n                paragraph = \"true\"\r\n                style = {{whiteSpace: \"pre-line\"}}\r\n            >\r\n                    <TextLang textId = \"aboutDetails\"/>\r\n            </Typography>\r\n        </>\r\n    );\r\n}","const Technologies = [\r\n    { key: 0, name: \"C++\", pictureSrc: '/img/ChipsLogos/c++logo.png', lvl: 3},\r\n    { key: 1, name: \"C#\", pictureSrc:  \"/img/ChipsLogos/chashlogo.png\", lvl: 3 },\r\n    { key: 2, name: \".NET\", pictureSrc: '/img/ChipsLogos/netlogo.png', lvl: 3},\r\n    { key: 3, name: \"Java\", pictureSrc: '/img/ChipsLogos/javalogo3.png', lvl: 2},\r\n    { key: 4, name: \"Arduino\", pictureSrc: '/img/ChipsLogos/arduino.png', lvl: 3},\r\n    { key: 5, name: \"Json\", pictureSrc: '/img/ChipsLogos/jsonlogo.png', lvl: 3},\r\n    { key: 6, name: \"RestSharp\", pictureSrc: '/img/ChipsLogos/restsharplogo.png', lvl: 3},\r\n    { key: 7, name: \"HTML\", pictureSrc: '/img/ChipsLogos/htmllogo.png', lvl: 3},\r\n    { key: 8, name: \"CSS\", pictureSrc: '/img/ChipsLogos/csslogo.png', lvl: 3},\r\n    { key: 9, name: \"JavaScript\", pictureSrc: '/img/ChipsLogos/jslogo.png', lvl: 3},\r\n    { key: 10, name: \"React\", pictureSrc: '/img/ChipsLogos/reactlogo.png', lvl: 3},\r\n]\r\n\r\nexport default Technologies","import React from 'react'\r\nimport { Chip, Avatar, Paper, Tooltip, Typography, Grid, Box } from '@material-ui/core'\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\r\nimport TextLang from '../TextLang';\r\nimport Technologies from '../Constant/Technologies'\r\n\r\nconst Picture = props => (\r\n    <Avatar source={props.source} />\r\n    //<img src = {props.source} height = \"50\" width = \"50\" style={{display: \"flex\"}}/>\r\n);\r\n\r\nfunction starLevel(level){\r\n    var stars = [];\r\n    for (var i=0; i<level; i++) stars.push(<StarIcon/>);\r\n    for (i=0; i<6-level; i++) stars.push(<StarBorderIcon/>);\r\n    return stars;\r\n}\r\n\r\nfunction TechChips(props) {\r\n    console.log(props);\r\n    return (\r\n        <>\r\n            {props.array.map(({name, key, pictureSrc, lvl}) => {\r\n                return (\r\n                        <TechChip key = {key} name = {name} pictureSrc = {pictureSrc} lvl = {lvl}/>               \r\n                )}\r\n            )}\r\n        </>\r\n    );\r\n}\r\n\r\nfunction TechChip(props){\r\n    return(\r\n        <>\r\n            <Chip key={props.key} label={props.name} avatar={<Avatar alt=\"picture\" src={props.pictureSrc}/>}  style = {{margin: \"4px 4px 4px 0px\"}}/>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default function AboutTechs() {\r\n    return (\r\n        <>\r\n            <Typography\r\n            variant = \"h5\"\r\n            component = \"h2\"\r\n            paragraph = \"true\"\r\n            >\r\n            <TextLang textId = \"aboutTechnologiesHeader\"/>\r\n            </Typography>\r\n                <TechChips array={Technologies} />\r\n      \r\n        </>\r\n    );\r\n}","const Tools = [\r\n    { key: 0, name: \"Visual Studio Code\", pictureSrc: '/img/ChipsLogos/Tools/VisualStudioCode.png'},\r\n    { key: 1, name: \"Visual Studio\", pictureSrc: '/img/ChipsLogos/Tools/VisualStudio.png'},\r\n    { key: 2, name: \"IntelliJ IDEA\", pictureSrc: '/img/ChipsLogos/Tools/intellij.png'},\r\n    { key: 4, name: \"Android Studio\", pictureSrc: '/img/ChipsLogos/Tools/AndroidStudio.png'},\r\n    { key: 5, name: \"Arduino IDE\", pictureSrc: '/img/ChipsLogos/arduino.png'},\r\n    { key: 6, name: \"Postman\", pictureSrc: '/img/ChipsLogos/Tools/Postman.png'},\r\n    { key: 7, name: \"pgModeler\", pictureSrc: '/img/ChipsLogos/Tools/pgModeler.png'},\r\n    { key: 8, name: \"Trello\", pictureSrc: '/img/ChipsLogos/Tools/trello.png'},\r\n    { key: 9, name: \"GitHub\", pictureSrc: '/img/ChipsLogos/Tools/github.png'},\r\n]\r\n\r\nexport default Tools","import React from 'react'\r\nimport { Chip, Avatar, Paper, Tooltip, Typography, Grid, Box } from '@material-ui/core'\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\r\nimport TextLang from '../TextLang';\r\nimport Tools from '../Constant/Tools'\r\n\r\nfunction ToolChips(props) {\r\n    console.log(props);\r\n    return (\r\n        <>\r\n            {props.array.map(({name, key, pictureSrc, lvl}) => {\r\n                return (\r\n                        <ToolChip key = {key} name = {name} pictureSrc = {pictureSrc} lvl = {lvl}/>     \r\n                )}\r\n            )}\r\n        </>\r\n    );\r\n}\r\n\r\nfunction ToolChip(props){\r\n    return(\r\n        <>\r\n            <Chip key={props.key} label={props.name} avatar={<Avatar alt=\"picture\" src={props.pictureSrc}/>} style = {{margin: \"4px 4px 4px 0px\"}} />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default function AboutTools() {\r\n    return (\r\n        <>\r\n            <Typography\r\n            variant = \"h5\"\r\n            component = \"h2\"\r\n            paragraph = \"true\"\r\n            >\r\n            <TextLang textId = \"aboutDevToolsHeader\"/>\r\n            </Typography>\r\n            <ToolChips array={Tools} />      \r\n        </>\r\n    );\r\n}","import React from 'react'\r\nimport {Box, Paper, makeStyles, Typography, CardHeader, Avatar, CardContent, Grid, Divider} from '@material-ui/core'\r\nimport Card from '@material-ui/core/Card'\r\nimport SchoolRoundedIcon from '@material-ui/icons/SchoolRounded';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport SchoolIcon from '@material-ui/icons/School';\r\nimport SmsIcon from '@material-ui/icons/Sms';\r\nimport AboutCard from '../Cards/AboutCard'\r\nimport AboutDetails from '../Cards/AboutDetails'\r\nimport AboutTechs from '../Cards/AboutTechs';\r\nimport AboutTools from '../Cards/AboutTools'\r\nimport withWidth from '@material-ui/core/withWidth'\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    rootContainer:{\r\n        width: \"100vw\",\r\n        marginTop: \"80px\",\r\n        \r\n    },\r\n\r\n    paper: {\r\n        padding: 20,\r\n        color: \"#000000\",\r\n        backgroundColor: \"#ebebeb\",\r\n        opacity: \"86%\",\r\n        boxShadow: 10,\r\n    },\r\n\r\n    aboutCardRoot: {\r\n        // [theme.breakpoints.up('lg')]:{\r\n        //     maxWidth: 350,\r\n        //     minWidth: 400,\r\n        // },\r\n        maxWidth: 400,\r\n        margin: \"20px\",\r\n        [theme.breakpoints.up(\"xs\")]:{\r\n            maxWidth: 400\r\n        },\r\n    },\r\n\r\n    avatar:{\r\n        backgroundColor: \"#000000\",\r\n        width: theme.spacing(20),\r\n        height: theme.spacing(20)\r\n    },\r\n\r\n    icon:{\r\n        fontSize: 80,\r\n    },\r\n\r\n    dividerColor:{\r\n        backgroundColor: \"#000000\",\r\n        color: \"#000000\",\r\n        height: 1\r\n    }\r\n\r\n}));\r\n\r\nfunction About(){\r\n    const classes = useStyles();\r\n    return(\r\n        <Grid //main container\r\n        container\r\n        direction = \"row\"\r\n        justify = \"center\"\r\n        alignItems = \"flex-start\"\r\n        className = {classes.rootContainer}           \r\n        >\r\n            <Grid item xs = {12} sm = {12} md = {6} lg = {7}  className = {classes.aboutCardRoot} >\r\n                <AboutCard/>            \r\n            </Grid>\r\n            <Grid container item xs = {12} sm = {12} md = {6} lg = {5} direction = \"column\" justify=\"flex-start\" alignItems = \"flex-start\" style = {{margin: \"20px\"}}>\r\n                <Paper style = {{padding: 25, maxWidth: 800}}>\r\n                    <Grid container item>\r\n                        <AboutDetails/>\r\n                    </Grid>\r\n                    <Grid item >\r\n                        <AboutTechs/>\r\n                    </Grid>\r\n                    <Grid item style = {{marginTop: \"20px\"}}>\r\n                        <AboutTools/>\r\n                    </Grid>\r\n                </Paper>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default (About)","import React from 'react';\r\nimport {makeStyles, createMuiTheme} from '@material-ui/core/styles'\r\nimport { Grid, Card, CardActionArea, CardMedia, Typography, CardContent, Avatar, Tooltip, Box, ThemeProvider } from '@material-ui/core';\r\nimport ProjectsList from '../Constant/ProjectsList'\r\nimport programmingLanguages from '../Constant/Technologies'\r\n\r\nconst useStyles = makeStyles( theme => ({\r\n    root: {\r\n        width: \"100%\",\r\n        //minHeight: \"400px\"\r\n    },\r\n    media: {\r\n        width: \"auto\",\r\n        height: 250,\r\n        display: \"block\",\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n    },\r\n}));\r\n\r\nfunction ShowLanguages(indexes){\r\n    var langs = [];\r\n    indexes.map((currentValue) => {\r\n        langs.push(programmingLanguages[currentValue]);\r\n    })\r\n    return(\r\n        <>\r\n        {langs.map((currentLang) => {\r\n            return (\r\n                <Tooltip placement=\"top\" title={currentLang.name}>\r\n                    <Grid item >\r\n                        <Avatar variant = \"square\" src={currentLang.pictureSrc} style={{ height: 23, width: 23, backgroundPositionX: \"50%\", backgroundPositionY: \"50%\", backgroundRepeat: \"no-repeat\", backgroundSize: \"cover\" }} imgProps = {{style: {}}} />\r\n                    </Grid>\r\n                </Tooltip>\r\n            );\r\n        })}\r\n        </>\r\n    );\r\n}\r\n\r\nexport function ProjectCard({projectId, onClick }) {\r\n    const classes = useStyles();\r\n    return (\r\n        <Card className={classes.root}>\r\n            <CardActionArea onClick = {onClick}>\r\n                <CardMedia className={classes.media} image={ProjectsList[projectId].pictureSrc} component = \"img\" />\r\n                <CardContent>\r\n                    <Grid id=\"langauge-icons-grid\" container direction=\"row\" justify=\"flex-end\" alignItems=\"flex-start\" spacing={1}>\r\n                        {ShowLanguages(ProjectsList[projectId].technologiesIndexes)}\r\n                    </Grid>\r\n                    <Grid>\r\n                        <Typography style={{marginTop: 10}} gutterBottom variant=\"h5\" component=\"h2\">{ProjectsList[projectId].name}</Typography>\r\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">{ProjectsList[projectId].descShort}</Typography>\r\n                    </Grid>\r\n                </CardContent>\r\n            </CardActionArea>\r\n        </Card>\r\n    );\r\n}\r\n","import React from 'react'\r\nimport {makeStyles} from '@material-ui/core/styles'\r\nimport {Card, Grid, CardMedia} from '@material-ui/core'\r\nimport { withRouter } from 'react-router-dom'\r\nimport ProjectsList from '../Constant/ProjectsList'\r\n\r\nconst useStyles = makeStyles(theme =>({\r\n    root:{\r\n        width: 600,\r\n        height: 700\r\n    },\r\n    media: {\r\n        width: 600,\r\n        height: 300\r\n    },\r\n}));\r\n\r\nfunction ProjectDetailsCard({ProjectIndex}){\r\n    const classes = useStyles();\r\n    return (\r\n        <Card className = {classes.root}>\r\n            <CardMedia className = {classes.media} image = {ProjectsList[ProjectIndex].pictureSrc}/>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default withRouter(ProjectDetailsCard);","import React from 'react'\r\nimport {makeStyles, createMuiTheme} from '@material-ui/core/styles'\r\nimport {Grid, Paper, Typography, Link, Box, Chip, ThemeProvider} from '@material-ui/core'\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport ProjectsList from './Constant/ProjectsList'\r\nimport TechnologiesList from './Constant/Technologies'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    rootContainer:{\r\n        width: \"35vw\",\r\n        padding: theme.spacing(1),\r\n        [theme.breakpoints.down('sm')]:{\r\n            width: '80vw',\r\n        },\r\n        [theme.breakpoints.only('md')]:{\r\n            width: '50vw',\r\n        },\r\n        height: \"100vh\",\r\n         \r\n    },\r\n    techContainer:{\r\n        marginTop: 50,\r\n        position: \"absolute\",\r\n        bottom: 0,\r\n    },\r\n    img: {\r\n        width: \"auto\",\r\n        maxWidth: \"100%\",\r\n        height: 400,\r\n        display: \"block\",\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        marginTop: 20,\r\n        marginBottom: 20,\r\n        [theme.breakpoints.down('sm')]:{\r\n            height: 200,\r\n        }\r\n\r\n    },\r\n    techImg: {\r\n        maxWidth: \"100%\",\r\n        height: \"auto\",\r\n\r\n    },\r\n    textContainer:{\r\n        marginTop: 10,\r\n        marginLeft: 20,\r\n        marginRight: 20,\r\n        whiteSpace: \"pre-line\"\r\n    }\r\n\r\n}));\r\n\r\nfunction Title({projectId}){\r\n    const classes = useStyles();\r\n    return(\r\n        <Typography\r\n        variant = \"h4\"\r\n        component = \"h1\"\r\n        align = \"left\"\r\n        >\r\n            {ProjectsList[projectId].name}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nfunction Description({projectId}){\r\n    const classes = useStyles();\r\n    return(\r\n        <Typography\r\n        variant = \"body1\"\r\n        component = \"p\"\r\n        align = \"left\"\r\n        style = {{fontFamily: \"Baloo Thambi 2\"}}\r\n        gutterBottom>\r\n            {ProjectsList[projectId].desc}\r\n        </Typography>\r\n\r\n    );\r\n}\r\n\r\nfunction Technologies({projectId}){\r\n    const classes = useStyles();\r\n    return(\r\n        <>\r\n            {ProjectsList[projectId].technologiesIndexes.map((currentValue)=> {\r\n                    return(\r\n                        <Grid item lg  = {3} xs = {4} style = {{padding: 30}}>\r\n                            <img src = {TechnologiesList[currentValue].pictureSrc} className = {classes.techImg}/>\r\n                        </Grid>\r\n                    )\r\n                }              \r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nfunction ProjectDetails({projectId}){\r\n    const classes = useStyles();\r\n    return (\r\n        <Box className = {classes.rootContainer}>\r\n            <Box><img className = {classes.img} src = {ProjectsList[projectId].pictureSrc} /></Box>\r\n            <Box className = {classes.textContainer}>\r\n                <Title projectId = {projectId}/> \r\n            </Box>\r\n            <Box className = {classes.textContainer} textAlign = \"left\">\r\n                <Link align = \"right\" gutterBottom target = \"_blank\" href = {ProjectsList[projectId].github}>{ProjectsList[projectId].github}</Link>\r\n            </Box>\r\n            <Box className = {classes.textContainer}>\r\n                <Description projectId={projectId}/>\r\n            </Box>\r\n            <Box style={{marginTop: 50, width: \"99%\"}}>\r\n                <Grid\r\n                container\r\n                direction = \"row\"\r\n                justify = \"space-evenly\"\r\n                alignItems = \"center\"\r\n                spacing = {3}\r\n                classname = {classes.techContainer}\r\n                >\r\n                    <Technologies projectId = {projectId}/>\r\n                </Grid>\r\n            </Box>\r\n        </Box>\r\n\r\n        \r\n    );\r\n}\r\n\r\nexport default ProjectDetails","import React from 'react'\r\nimport {makeStyles, createMuiTheme, responsiveFontSizes, ThemeProvider} from '@material-ui/core/styles' \r\nimport {Grid, Paper, Typography} from '@material-ui/core'\r\nimport ProjectsList from './Constant/ProjectsList'\r\nimport Technologies from './Constant/Technologies'\r\n\r\nlet muiTheme = createMuiTheme();\r\nmuiTheme = responsiveFontSizes(muiTheme);\r\n\r\nexport const useStyles = makeStyles( theme => ({\r\n    rootGrid: {\r\n        height: \"auto\",\r\n        maxWidth: \"100%\",\r\n        marginBottom: 40,       \r\n    },\r\n\r\n    techGrid: {\r\n        maxHeight: 349\r\n    },\r\n\r\n    img:{\r\n        maxWidth: \"100%\",\r\n        height: \"auto\",\r\n    },\r\n    paper:{\r\n        maxWidth: \"100%\",\r\n        color: \"transparent\",\r\n        //backgroundColor: \"transparent\"\r\n    },\r\n    typography:{\r\n        [theme.breakpoints.up('md')]:{\r\n            marginLeft: 20,\r\n            marginRight: 20,\r\n        },\r\n        [theme.breakpoints.down('sm')]:{\r\n            marginTop: 20,\r\n            textAlign: \"center\"\r\n        },\r\n        color: \"#ffffff\"\r\n    },\r\n    techImg:{\r\n        maxWidth: \"100%\",\r\n        height: \"auto\"\r\n    }\r\n}));\r\n\r\nfunction ProjectDescription({projectId, align}){\r\n    const classes = useStyles();\r\n    return(\r\n        <>\r\n            <ThemeProvider theme = {muiTheme}>\r\n                <Typography\r\n                variant = \"h4\"\r\n                component = \"h1\"\r\n                paragraph = \"true\"\r\n                align = {align}\r\n                className = {classes.typography}\r\n                >\r\n                    {ProjectsList[projectId].name}\r\n                </Typography>\r\n                <Typography\r\n                variant = \"body1\"\r\n                paragraph = \"true\"\r\n                align = {align}\r\n                className = {classes.typography}\r\n                component = \"p\"\r\n                display = \"block\"\r\n                style ={{whiteSpace: 'pre-line'}}\r\n                >\r\n                    {ProjectsList[projectId].desc}\r\n                </Typography>\r\n            </ThemeProvider>\r\n\r\n            \r\n        </>\r\n    );\r\n}\r\n\r\nfunction ProjectTechnologies({projectId}){\r\n    const classes = useStyles();\r\n    return(\r\n        <>\r\n            {ProjectsList[projectId].technologiesIndexes.map((currentValue)=> {\r\n                    return(\r\n                        <Grid item lg  = {4} xs = {2}>\r\n                            <img src = {Technologies[currentValue].pictureSrc} className = {classes.techImg}/>\r\n                        </Grid>\r\n                    )\r\n                }              \r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nfunction Project({isReverse, projectId}){\r\n    const classes = useStyles();\r\n    const rootGridProps ={\r\n        direction: isReverse ? \"row-reverse\" : \"row\"\r\n    }\r\n    const projectDescriptionProps ={\r\n        align: isReverse? \"right\" : \"left\"\r\n    }\r\n    return(\r\n        //<Paper className = {classes.paper}>\r\n            <Grid\r\n            container\r\n            className = {classes.rootGrid}\r\n            {...rootGridProps}\r\n            alignItems = \"flex-start\"\r\n            justify = \"center\"\r\n            \r\n            >\r\n                <Grid item lg = {5} xs = {12}><ProjectDescription projectId = {projectId} {...projectDescriptionProps}/></Grid>\r\n                <Grid item lg = {3} xs = {12}><img src = {ProjectsList[projectId].pictureSrc} className = {classes.img}/></Grid>               \r\n                <Grid item \r\n                container \r\n                direction = \"column\"\r\n                alignItems = \"center\"\r\n                justify = \"center\"\r\n                lg = {2}\r\n                xs = {4}\r\n                spacing = {12}\r\n                className = {classes.techGrid}\r\n                >\r\n                    <ProjectTechnologies projectId = {0}/>\r\n                </Grid>\r\n            </Grid>\r\n        //</Paper>\r\n\r\n    );\r\n}\r\n\r\nexport default Project;","import React, {useEffect} from 'react'\r\nimport {makeStyles} from '@material-ui/core/styles'\r\nimport {Grid, Grow, Paper, SwipeableDrawer, Typography} from '@material-ui/core'\r\nimport { ProjectCard } from '../Cards/ProjectCard';\r\nimport { withRouter, Route, useRouteMatch, Switch, Link, Redirect, useLocation, useHistory, useParams } from 'react-router-dom';\r\nimport ProjectDetailsCard from '../Cards/ProjectDetailsCard'\r\nimport ProjectDetails from '../ProjectDetails'\r\nimport Project from '../Project'\r\nimport TextLang from '../TextLang'\r\nimport ProjectsList from '../Constant/ProjectsList'\r\n\r\nexport const useStyles = makeStyles( theme => ({\r\n    rootGrid: {\r\n        marginTop: \"50px\",\r\n        [theme.breakpoints.down(\"sm\")]:{\r\n            width: \"100vw\"\r\n        },\r\n        width: \"100vw\"\r\n        \r\n    },\r\n\r\n    header:{\r\n        marginBottom: \"20px\",\r\n        [theme.breakpoints.down(\"sm\")]:{\r\n            marginLeft: \"40px\",\r\n        },\r\n    },\r\n\r\n    containerCard:{\r\n        width: 350,\r\n        [theme.breakpoints.down(\"sm\")]:{\r\n            marginLeft: \"40px\",\r\n        },\r\n    },\r\n\r\n    img:{\r\n        maxWidth: \"100%\",\r\n        height: \"auto\",\r\n        \r\n    }\r\n}));\r\n\r\nfunction Projects(){\r\n    const classes = useStyles();\r\n    const toggleProjectDetailsDrawer = (isOpen) => event =>{\r\n        if (event && event.type === 'keydown' && (event.key==='Tab' || event.key === 'Shift')) return;\r\n        setProjectDetailsDrawerState(isOpen);\r\n    }\r\n    const openProjectDetailsDrawer = (projectId) => {\r\n        setSelectedProjectState(projectId);\r\n        setProjectDetailsDrawerState(true);\r\n    }\r\n    const [projectDetailsDrawerState, setProjectDetailsDrawerState] = React.useState(false);\r\n    const [selectedProjectState, setSelectedProjectState] = React.useState(0);\r\n    const displayProjectCards = ProjectsList.map(({key})=>(\r\n        <Grid item className = {classes.containerCard}><ProjectCard projectId = {key} onClick = {() => openProjectDetailsDrawer(key)}/></Grid>\r\n    ));\r\n    return(\r\n        <>\r\n        <Grid\r\n            container\r\n            className = {classes.rootGrid}\r\n            direction = \"row\"\r\n            alignItems = \"center\"\r\n            justify = \"center\"\r\n            spacing = {5}\r\n        >\r\n            <Grid item xs = {12} className = {classes.header}>\r\n                <Typography\r\n                variant = \"h4\"\r\n                component = \"h1\"\r\n                align = \"center\"\r\n                style = {{color: \"#ffffff\", fontFamily: \"Baloo Thambi 2\"}}\r\n                >\r\n                    <TextLang textId = \"projectsHeader\"/>\r\n                </Typography>\r\n            </Grid>\r\n            {displayProjectCards}\r\n        </Grid>\r\n        <SwipeableDrawer open = {projectDetailsDrawerState} onOpen = {toggleProjectDetailsDrawer(true)} onClose={toggleProjectDetailsDrawer(false)} anchor = \"right\" variant = \"temporary\" >\r\n            <ProjectDetails projectId = {selectedProjectState}/>\r\n        </SwipeableDrawer>\r\n        </>\r\n\r\n    );\r\n}\r\n\r\nexport default withRouter(Projects)","import React from 'react'\r\nimport {withRouter, useLocation, useHistory} from 'react-router-dom'\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport { makeStyles, AppBar, Box, Menu, MenuItem, Paper, Fade, Grow } from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\nimport SocialMedia from '../NavBar/SocialMedia'\r\nimport withWidth from '@material-ui/core/withWidth'\r\nimport TabPanel from './TabPanel'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Home from './Home'\r\nimport AboutMe from './About'\r\nimport Projects from './Projects'\r\nimport ProjectDetailsCard from '../Cards/ProjectDetailsCard';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    tabs: {\r\n        display: \"inline-flex\"\r\n    },\r\n\r\n    tabsIndicator: {\r\n        backgroundColor: \"#ffffff\", \r\n        [theme.breakpoints.down('sm')]:{\r\n            backgroundColor: \"transparent\"\r\n        }\r\n    },\r\n    tab: {\r\n        // disableTouchRipple: 'true',\r\n        // display: 'none',\r\n        // [theme.breakpoints.up('md')]:{\r\n        //     display: 'block',\r\n        // },\r\n    },\r\n\r\n    grow: {\r\n        flexGrow: 1\r\n    },\r\n\r\n    appBar: {\r\n        flexGrow: 1,\r\n        display: \"inline-flex\",\r\n        width: \"100%\"\r\n    },\r\n\r\n\r\n\r\n    menuButton:{\r\n        display: 'none',\r\n        // [theme.breakpoints.down('sm')]:{\r\n        //     display:'block',\r\n        //     marginLeft: theme.spacing(1)\r\n        // }\r\n    }\r\n\r\n}));\r\n\r\nfunction MenuTabs(props){\r\n    const classes = useStyles();\r\n    const isMobile = /xs|sm/.test(props.width);\r\n    const isSmall = /sm/.test(props.width);\r\n    const [projectName, setProjectName] = React.useState('');\r\n    const tabsProps = {\r\n        orientation: isMobile ? \"vertical\" : \"horizontal\",\r\n    };\r\n    const handleChange = (event, newValue) =>{\r\n        if (newValue === '/projects') setProjectName('');\r\n        props.history.push(newValue);\r\n    };\r\n\r\n    const parentPath = () =>{\r\n        var path = props.history.location.pathname;\r\n        var count = (path.match(/\\//g) || []).length;\r\n        if (count <= 1) return path;\r\n        else {\r\n            var firstOccurence = path.indexOf(\"/\");\r\n            var secondOccurence = path.indexOf(\"/\", firstOccurence + 1);\r\n            var returnString = path.substring(0,secondOccurence);\r\n            return path.substring(0,secondOccurence);\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className = {classes.grow}>\r\n            <div className = {classes.appBar}>\r\n                <Box display = \"flex\" className = {classes.appBar} component = 'nav'>\r\n                    <Box flexGrow = {1} display = \"flex\">\r\n                        <Tabs className = {classes.tabs} value={parentPath()} onChange={handleChange} classes = {{indicator: classes.tabsIndicator} } textColor = \"inherit\" {...tabsProps} >\r\n                            <Tab label = \"Home\" id = \"tab-0\" disableTouchRipple = \"true\" className = {classes.tab} value = '/'/>\r\n                            <Tab label = \"About\" disableTouchRipple = \"true\" className = {classes.tab} value = '/about'/>\r\n                            <Tab label = \"Sample projects\" disableTouchRipple = \"true\" className = {classes.tab} value = {`/projects`}/>\r\n                            <Tab label = \"Hobbies\" disableTouchRipple = \"true\" className = {classes.tab} value = '/hobbies'/>\r\n                            <Tab label = \"Contact\" disableTouchRipple = \"true\" className = {classes.tab} value = '/contact'/>\r\n                        </Tabs>           \r\n                    </Box>                  \r\n                    <Box>\r\n                        <SocialMedia className =  {classes.flexGrow}/>\r\n                    </Box>\r\n                </Box>\r\n            </div>\r\n            <div style = {{height: \"20px\"}}></div>\r\n            <TabPanel value = {props.history.location.pathname} index = '/'>\r\n                <Grow in = {props.history.location.pathname === '/'} timeout = {500}>\r\n                    <Grid \r\n                    container\r\n                    style = {{marginTop: 100}}\r\n                    >\r\n                        <Home/>\r\n                    </Grid>\r\n                </Grow>      \r\n            </TabPanel>\r\n            <TabPanel value = {props.history.location.pathname} index = '/about'>\r\n                <Grow in = {props.history.location.pathname === '/about'} timeout = {500} >\r\n                    <Grid\r\n                    container\r\n                    alignItems = \"center\"\r\n                    justify = \"center\"\r\n                    >\r\n                        <Grid item><AboutMe/></Grid>\r\n                    </Grid>\r\n                </Grow>\r\n            </TabPanel>\r\n            <TabPanel value = {props.history.location.pathname} index = {`/projects${projectName}`}>\r\n                <Grow in = {props.history.location.pathname === `/projects${projectName}`} timeout = {500} >\r\n                    <Box>\r\n                        <Projects setProjectName = {setProjectName}/> \r\n                    </Box>                                       \r\n                </Grow>\r\n            </TabPanel>\r\n            {/* <TabPanel value = {props.history.location.pathname} index = '/projects/downhillpay'>\r\n                <Grow in = {props.history.location.pathname === '/projects/downhillpay'} timeout = {500} >\r\n                    <Grid\r\n                    container\r\n                    alignItems = \"center\"\r\n                    justify = \"center\"\r\n                    style = {{marginTop: 50}}\r\n                    >\r\n                        <Grid item><ProjectDetailsCard ProjectIndex = {0}/></Grid>\r\n                    </Grid>\r\n                </Grow>\r\n            </TabPanel> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(withWidth()(MenuTabs))","import React, { useContext } from 'react'\r\nimport {Button, Menu, MenuItem} from '@material-ui/core'\r\nimport {languageOptions} from '../../lang/Dictionary'\r\nimport {LangaugeContext} from '../../lang/LangaugeContext'\r\nimport TranslateIcon from '@material-ui/icons/Translate';\r\n\r\nexport default function LangaugeSelector(){\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const langaugeContext = useContext(LangaugeContext);\r\n    const handleClick = (event) =>{\r\n        setAnchorEl(event.currentTarget);\r\n    }\r\n\r\n    const handleClose = () =>{\r\n        setAnchorEl(null);\r\n    }\r\n\r\n    const selectLangauge = (languageId) =>{\r\n        const selectedLanguage = languageOptions.find(item => item.id === languageId);\r\n        langaugeContext.setLanguage(selectedLanguage);\r\n        handleClose();\r\n    }\r\n\r\n    const MenuItems = () => {\r\n        return(\r\n            <>\r\n                {languageOptions.map((language)=>{\r\n                    return(\r\n                        <MenuItem onClick = {() => selectLangauge(language.id)} style = {{minWidth: 150}}>{language.text}</MenuItem>\r\n                    )\r\n                })}    \r\n            </>\r\n        )\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <Button onClick = {handleClick} startIcon = {<TranslateIcon/>} style = {{color: \"#ffffff\", minWidth: 100}}>\r\n                {langaugeContext.language.text}\r\n            </Button>\r\n            <Menu\r\n                id=\"lanaguageSelectorMenu\"\r\n                keepMounted\r\n                anchorEl = {anchorEl}\r\n                open = {Boolean(anchorEl)}\r\n                onClose = {handleClose}\r\n            >\r\n                <MenuItems/>\r\n            </Menu>\r\n        </div>\r\n    )\r\n} ","import React from 'react'\r\nimport {BrowserRouter as Router, withRouter, Link} from 'react-router-dom'\r\nimport {makeStyles} from '@material-ui/core/styles'\r\nimport {Tabs, Tab} from '@material-ui/core'\r\nimport SocialMedia from './SocialMedia'\r\nimport TextLang from '../TextLang'\r\nimport LangaugeSelector from './LanguageSelector'\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    appBar: {\r\n        flexGrow: 1,\r\n        display: \"inline-flex\",\r\n        width: \"100%\"\r\n    },\r\n    tabsIndicator: {\r\n        backgroundColor: \"#ffffff\", \r\n        [theme.breakpoints.down('sm')]:{\r\n            backgroundColor: \"transparent\"\r\n        }\r\n    },\r\n    tab:{\r\n        [theme.breakpoints.up('lg')]:{\r\n            minWidth: 200,\r\n        }\r\n       \r\n    },\r\n}));\r\n\r\n\r\n\r\nfunction MenuNavBar(props){\r\n    const classes = useStyles();\r\n\r\n    const parentPath = () =>{\r\n        var path = props.history.location.pathname;\r\n        var count = (path.match(/\\//g) || []).length;\r\n        if (count <= 1) return path;\r\n        else {\r\n            var firstOccurence = path.indexOf(\"/\");\r\n            var secondOccurence = path.indexOf(\"/\", firstOccurence + 1);\r\n            var returnString = path.substring(0,secondOccurence);\r\n            return path.substring(0,secondOccurence);\r\n        }\r\n    }\r\n    const tabValueFromPath = () =>{\r\n        const path = parentPath();\r\n        if (path === '/') return 0;\r\n        if (path === '/about') return 1;\r\n        if (path === '/projects') return 2;\r\n        if (path === '/contact') return 4;\r\n        else return 0;\r\n    }\r\n    const [tabValue, setTabValue] = React.useState(() => tabValueFromPath());\r\n    const handleTabChange = (event, value) =>{\r\n        setTabValue(value);\r\n    }\r\n    return (\r\n        <div className = {classes.appBar}>\r\n            <Tabs style ={{flexGrow: 1}} value = {tabValue} onChange = {handleTabChange} classes = {{indicator: classes.tabsIndicator} }>\r\n                <Tab component={Link} to=\"/\" label = {<TextLang textId = \"navHome\"/>} disableTouchRipple = \"true\" value={0} className = {classes.tab}/>\r\n                <Tab component = {Link} label = {<TextLang textId = \"navAbout\"/>} to = {{pathname: \"/about\", state: {about: true}}} disableTouchRipple = \"true\" value = {1} className = {classes.tab}/>\r\n                <Tab component = {Link} label = {<TextLang textId = \"navProjects\"/>} to = \"/projects\" disableTouchRipple = \"true\" value = {2} className = {classes.tab}/>\r\n                <Tab component = {Link} label = {<TextLang textId = \"navContact\"/>} to = \"/contact\" disableTouchRipple = \"true\" value = {4} className = {classes.tab}/> \r\n            </Tabs>\r\n            <span style = {{marginTop: 10}}>\r\n                <SocialMedia style ={{flexGrow: 1}}/>\r\n            </span>\r\n            <span style = {{marginTop:4, marginLeft: 10}}>\r\n                <LangaugeSelector/>\r\n            </span>\r\n            \r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withRouter(MenuNavBar)","import React from 'react'\r\nimport {BrowserRouter as Router, withRouter, Link} from 'react-router-dom'\r\nimport {makeStyles} from '@material-ui/core/styles'\r\nimport { AppBar, Toolbar, IconButton, SwipeableDrawer, List, ListItemText, ListItem, Divider, ListItemIcon } from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\nimport HomeIcon from '@material-ui/icons/Home'\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport AccountBalanceWalletIcon from '@material-ui/icons/AccountBalanceWallet';\r\nimport WeekendIcon from '@material-ui/icons/Weekend';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport SocialMedia from './SocialMedia'\r\nimport TextLang from '../TextLang'\r\nimport LangaugeSelector from './LanguageSelector';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    appBarDiv: {\r\n        flexGrow: 1,\r\n        display: \"inline-flex\",\r\n        width: \"100%\"\r\n    },\r\n    appBar:{\r\n        background: \"#1178c2\"\r\n    },\r\n    drawerContent: {\r\n        width: \"50vw\",\r\n    }\r\n}));\r\n\r\nfunction DrawerContent(props){\r\n    const classes = useStyles();\r\n    return(\r\n        <div className = {classes.drawerContent}>\r\n            <List>\r\n                <ListItem>\r\n                    <ListItemText primary = 'Menu'/>\r\n                </ListItem>\r\n                <Divider/>\r\n                <ListItem button component = {Link} to = '/' onClick = {props.itemOnClickCallback}>\r\n                    <ListItemIcon><HomeIcon/></ListItemIcon>\r\n                    <ListItemText primary = {<TextLang textId = \"navHome\"/>}/>\r\n                </ListItem>\r\n                <ListItem button component = {Link} to = '/about' onClick = {props.itemOnClickCallback} >\r\n                    <ListItemIcon><InfoIcon/></ListItemIcon>\r\n                    <ListItemText primary = {<TextLang textId = \"navAbout\"/>}/>\r\n                </ListItem>\r\n                <ListItem button component = {Link} to = '/projects' onClick = {props.itemOnClickCallback} >\r\n                    <ListItemIcon><AccountBalanceWalletIcon/></ListItemIcon>\r\n                    <ListItemText primary = {<TextLang textId = \"navProjects\"/>}/>\r\n                </ListItem>\r\n                {/* <ListItem button component = {Link} to = '/hobbies' onClick = {props.itemOnClickCallback} >\r\n                    <ListItemIcon><WeekendIcon/></ListItemIcon>\r\n                    <ListItemText primary = 'Hobbies'/>\r\n                </ListItem> */}\r\n                <ListItem button component = {Link} to = '/contact' onClick = {props.itemOnClickCallback} >\r\n                    <ListItemIcon><MailIcon/></ListItemIcon>\r\n                    <ListItemText primary = {<TextLang textId = \"navContact\"/>}/>\r\n                </ListItem>\r\n            </List>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction MenuNavBarMobile(props){\r\n    const classes = useStyles();\r\n    const [menuDrawerState, setMenuDrawerState] = React.useState(false);\r\n    const toggleMenuDrawer = (isOpen) => event => {\r\n        if (event && event.type === 'keydown' && (event.key==='Tab' || event.key === 'Shift')) return;\r\n        setMenuDrawerState(isOpen);\r\n    }\r\n    return(\r\n        <div className =  {classes.appBarDiv}>\r\n            <SwipeableDrawer open = {menuDrawerState} onOpen = {toggleMenuDrawer(true)} onClose = {toggleMenuDrawer(false)} anchor = \"left\">\r\n                <DrawerContent itemOnClickCallback = {() => setMenuDrawerState(false)}/>\r\n            </SwipeableDrawer>\r\n            <AppBar position = \"fixed\" className = {classes.appBar}>\r\n                <Toolbar>\r\n                    <IconButton edge = \"start\" className = {classes.menuButton} color = \"inherit\" style = {{flexGrow: 1}} \r\n                    onClick = {() => setMenuDrawerState(true)}\r\n                    >\r\n                        <MenuIcon /> \r\n                    </IconButton>\r\n                    <LangaugeSelector/> \r\n                    <span style = {{flexGrow: 5}}/>\r\n                    <SocialMedia/>\r\n                    \r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MenuNavBarMobile","import React from 'react'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport MenuTabs from './Routes/MenuTabs'\r\nimport MenuNavBar from './NavBar/MenuNavBar'\r\nimport { makeStyles, Drawer, Box, SwipeableDrawer, List} from '@material-ui/core'\r\nimport SocialMedia from './NavBar/SocialMedia'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\nimport withWidth, {isWidthUp} from '@material-ui/core/withWidth'\r\nimport MenuNavBarMobile from './NavBar/MenuNavBarMobile'\r\n\r\nconst useStyles = makeStyles(theme =>({\r\n    appBar : {\r\n        [theme.breakpoints.down(\"sm\")]:{\r\n            alignItems: \"center\"\r\n        }\r\n    },\r\n\r\n    toolbarInside : {\r\n\r\n    },\r\n\r\n    socialMedia : {\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            display: 'none'\r\n        }\r\n    }\r\n\r\n}));\r\n\r\nfunction AppBarNormal() {\r\n    const classes = useStyles();\r\n    return(\r\n    <AppBar position = \"sticky\" className = {classes.appBar} style={{ background: 'transparent', boxShadow: 'none'}}>\r\n        <Toolbar>\r\n            <MenuNavBar/>\r\n        </Toolbar>            \r\n    </AppBar> \r\n    );\r\n}\r\n\r\nfunction RavensuAppBar(props){\r\n    const [tabValue, setTabValue] = React.useState(0);\r\n    if(isWidthUp('md', props.width)) return <AppBarNormal/>;\r\n    else return <MenuNavBarMobile/>;\r\n}\r\n\r\nexport default withWidth()(RavensuAppBar)","import React from 'react'\r\nimport axios from 'axios'\r\nimport {makeStyles} from '@material-ui/core/styles'\r\nimport {Container, TextField, createMuiTheme, ThemeProvider, Button, Dialog, DialogTitle, CircularProgress, withStyles, Avatar, DialogContent, DialogContentText, DialogActions, Grid, Typography} from '@material-ui/core'\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport {blue} from '@material-ui/core/colors'\r\nimport TextLang from '../TextLang'\r\n\r\nconst useStyles = makeStyles (theme => ({\r\n    root: {\r\n        [theme.breakpoints.down('sm')]:{\r\n            marginTop: 60,\r\n        },\r\n        [theme.breakpoints.up('md')]:{\r\n            marginTop: 50,\r\n        },\r\n        height: 500,\r\n\r\n    },\r\n    textfieldRoot: {\r\n        width: \"100%\",\r\n        padding: 10,\r\n        marginBottom: 10,\r\n        \r\n    },\r\n    textField: {\r\n        backgroundColor: \"rgba(255,255,255,1)\",\r\n        borderRadius: 4,\r\n        width: \"100%\",\r\n        \r\n    },\r\n    textFieldMessage:{\r\n        width: \"100%\"\r\n    },\r\n    emailSendingDialogRoot:{\r\n        margin: 20\r\n    },\r\n    button:{\r\n        width: 300,\r\n        height: 70,\r\n        backgroundColor: \"#2fa33f\",\r\n        color: \"#ffffff\",\r\n        '&:hover':{\r\n            backgroundColor: \"#44e35a\"\r\n        }\r\n    }\r\n}));\r\n\r\nconst textFieldTheme = createMuiTheme({\r\n    palette: {\r\n        primary: blue\r\n    }\r\n})\r\n\r\nconst ColoredCircularProgress = withStyles({\r\n    root: {\r\n        color: '#ffffff'\r\n    }\r\n})(CircularProgress);\r\n\r\n\r\nfunction EmailSendingDialog(props){\r\n    const classes = useStyles();\r\n    const {isOpen, onClose, showSendingEmailProgress, showEmailSendSuccedIcon, showEmailSendFailIcon} = props;\r\n    return(\r\n        <div className = {classes.emailSendingDialogRoot}>\r\n            <Dialog open = {isOpen} onClose = {onClose} PaperProps = {{style: {backgroundColor: \"transparent\", boxShadow: \"none\", padding: 50}}}>\r\n                {showSendingEmailProgress && <ColoredCircularProgress size = {100} />}\r\n                {showEmailSendSuccedIcon && <Avatar style = {{height: 100, width: 100, backgroundColor: \"#59e387\"}}><CheckIcon style = {{fontSize: \"48px\"}} /></Avatar>}\r\n                {showEmailSendFailIcon && <Avatar style = {{height: 100, width: 100, backgroundColor: \"#eb6c6c\"}}><ClearIcon style = {{fontSize: \"48px\"}} /></Avatar>}\r\n            </Dialog>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nfunction EmailSentErrorDialog(props){\r\n    const classes = useStyles();\r\n    const {isOpen, onClose, errorCode, errorMessage, errorStack} = props;\r\n    //let errorDialogContent = `Error Code: ${errorCode}\\n${errorMessage}\\n\\n${errorStack}\\nPlease let me know about this error at email@email.com\\nAttach screenshot of this error message if possible.`\r\n    let errorDialogContent = `Please let me know about this error at contact@ravensu.com\\n${errorCode}\\n${errorMessage}`\r\n    return(\r\n        <div>\r\n            <Dialog open = {isOpen} onClose = {onClose}>\r\n                <DialogTitle>{\"Error occured while trying to send a message\"}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        {errorDialogContent}\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick = {onClose} style = {{backgroundColor: \"#366abf\", color: \"#ffffff\"}}>\r\n                        OK\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction Contact(props){\r\n    const classes = useStyles();\r\n    const fetchEmailTimoutTimer = React.useRef();\r\n    const emailSendingNotificationTimer = React.useRef();\r\n    const [name, setName] = React.useState('');\r\n    const [email, setEmail] = React.useState('');\r\n    const [subject, setSubject] = React.useState('');\r\n    const [message, setMessage] = React.useState('');\r\n    const [isEmailSendingDialogOpen, setEmailSendingDialogOpen] = React.useState(false);\r\n    const [showSendingEmailProgress, setShowSendingEmailProgress] = React.useState(false);\r\n    const [showEmailSendSuccedIcon, setShowEmailSendSuccedIcon] = React.useState(false);\r\n    const [showEmailSendFailIcon, setShowEmailSendFailIcon] = React.useState(false);\r\n    const [isEmailSentErrorDialogOpen, setIsEmailSentErrorDialogOpen] = React.useState(false);\r\n    React.useEffect(() => {\r\n        return () => {\r\n          clearTimeout(emailSendingNotificationTimer.current);\r\n        };\r\n      }, []);\r\n    let mailData = {\r\n        name: name,\r\n        email: email,\r\n        subject: subject,\r\n        message: message\r\n    }\r\n    let errorCode = \"\";\r\n    let errorMessage = \"\";\r\n    let errorStack = \"\";\r\n    const resetForm = () =>{\r\n        setName('');\r\n        setEmail('');\r\n        setSubject('');\r\n        setMessage('');\r\n    }\r\n    const onNameChange = (e) =>{\r\n        setName(e.target.value);\r\n    }\r\n    const onEmailChange = (e) =>{\r\n        setEmail(e.target.value);\r\n    }\r\n    const onSubjectChange = (e) =>{\r\n        setSubject(e.target.value);\r\n    }\r\n    const onMessageChange = (e) =>{\r\n        setMessage(e.target.value);\r\n    }\r\n    const handleEmailSendingDialogClose = () =>{\r\n        if (showEmailSendSuccedIcon || showEmailSendFailIcon){\r\n            setEmailSendingDialogOpen(false);\r\n            clearTimeout(emailSendingNotificationTimer.current);\r\n            setShowEmailSendSuccedIcon(false);\r\n            setShowEmailSendFailIcon(false);\r\n        }\r\n        if (showEmailSendFailIcon){\r\n            setIsEmailSentErrorDialogOpen(true);\r\n        }\r\n    }\r\n    const handleEmailSentErrorDialogClose = () =>{\r\n        setIsEmailSentErrorDialogOpen(false);\r\n    }\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        setEmailSendingDialogOpen(true);\r\n        setShowSendingEmailProgress(true);\r\n        axios.post(process.env.REACT_APP_CONTACT_SEND_ENDPOINT, mailData, {timeout: 10000, headers: {'Accept': 'application/json', 'Content-Type': 'application/json'}})\r\n        .then((response) =>{\r\n            if (response.data.status === 'success'){\r\n                setShowSendingEmailProgress(false);\r\n                setShowEmailSendSuccedIcon(true);\r\n                emailSendingNotificationTimer.current = setTimeout(()=>{\r\n                    setShowEmailSendSuccedIcon(false);\r\n                    setEmailSendingDialogOpen(false);\r\n                }, 2000);\r\n                //resetForm();\r\n            }\r\n            else if(response.data.status === 'fail'){\r\n                setShowSendingEmailProgress(false);\r\n                setShowEmailSendFailIcon(true);\r\n                errorMessage = response.data;\r\n                emailSendingNotificationTimer.current = setTimeout(()=>{\r\n                    setShowEmailSendFailIcon(false);\r\n                    setEmailSendingDialogOpen(false);\r\n                    setIsEmailSentErrorDialogOpen(true);\r\n                }, 2000);\r\n            }\r\n        })\r\n        .catch(err => {\r\n                setShowSendingEmailProgress(false);\r\n                setShowEmailSendFailIcon(true);\r\n                errorCode = err.code;\r\n                errorMessage = err.message;\r\n                errorStack = err.stack;\r\n                emailSendingNotificationTimer.current = setTimeout(()=>{\r\n                    setShowEmailSendFailIcon(false);\r\n                    setEmailSendingDialogOpen(false);\r\n                    setIsEmailSentErrorDialogOpen(true);\r\n                }, 2000);\r\n        });\r\n    }\r\n\r\n    return(\r\n        <>\r\n        <Container maxWidth = \"xl\" className = {classes.root}>\r\n            <Typography\r\n            variant = \"h4\"\r\n            component = \"h1\"\r\n            align = \"center\"\r\n            style = {{color: \"#ffffff\", fontFamily: \"Baloo Thambi 2\"}}\r\n            >\r\n                <TextLang textId = \"contactHeader\"/>\r\n            </Typography>\r\n            <form onSubmit = {handleSubmit.bind(this)}>\r\n            <ThemeProvider theme = {textFieldTheme}>\r\n                <Grid \r\n                container\r\n                direction = \"row\"\r\n                justify = \"center\"\r\n                alignItems = \"flex-start\"\r\n                style = {{height: \"100%\", marginTop: 50}}\r\n                >\r\n                    <Grid item md = {2}/>\r\n                    <Grid\r\n                    container\r\n                    item\r\n                    direction = \"column\"\r\n                    justify = \"flex-start\"\r\n                    alignItems = \"flex-start\"\r\n                    style = {{height: \"200\"}}\r\n                    md = {4}\r\n                    >           \r\n                        <Grid item className = {classes.textfieldRoot}><TextField required label = {<TextLang textId = \"contactInputSubject\"/>} variant = \"filled\" classes = {{root: classes.textField}} value = {subject} onChange = {onSubjectChange.bind(this)}/></Grid>\r\n                        <Grid item className = {classes.textfieldRoot}><TextField required label = {<TextLang textId = \"contactInputName\"/>} variant = \"filled\" classes = {{root: classes.textField}} value = {name} onChange = {onNameChange.bind(this)}/></Grid>\r\n                        <Grid item className = {classes.textfieldRoot}><TextField required label = {<TextLang textId = \"contactInputEmail\"/>} variant = \"filled\" classes = {{root: classes.textField}} value = {email} onChange = {onEmailChange.bind(this)}/></Grid>\r\n                    </Grid>\r\n                    <Grid\r\n                    container\r\n                    item\r\n                    size\r\n                    direction = \"column\"\r\n                    justify = \"flex-start\"\r\n                    alignItems = \"center\"\r\n                    md = {4}\r\n                    >\r\n                        <Grid item className = {classes.textfieldRoot}><TextField required label = {<TextLang textId = \"contactInputMessage\"/>} variant = \"filled\" classes = {{root: classes.textField}} multiline rows = {20} value = {message} onChange = {onMessageChange.bind(this)}/></Grid>\r\n                    </Grid>\r\n                    <Grid item md = {2}/>\r\n                </Grid>\r\n            </ThemeProvider>\r\n                <Grid container justify = \"center\" style = {{marginTop: 30}}>\r\n                    <Grid item style = {{marginBottom: 30}}>\r\n                        <Button\r\n                            type = \"submit\"\r\n                            variant=\"contained\"\r\n                            color=\"default\"\r\n                            size = \"large\"\r\n                            className={classes.button}\r\n                            endIcon={<SendIcon/>}\r\n                            >\r\n                                {<TextLang textId = \"contactSendButton\"/>}\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n            </form>\r\n        </Container>\r\n        <EmailSendingDialog \r\n        isOpen = {isEmailSendingDialogOpen} \r\n        onClose = {handleEmailSendingDialogClose}\r\n        showSendingEmailProgress = {showSendingEmailProgress}\r\n        showEmailSendSuccedIcon = {showEmailSendSuccedIcon}\r\n        showEmailSendFailIcon = {showEmailSendFailIcon}\r\n        />\r\n        <EmailSentErrorDialog\r\n        isOpen = {isEmailSentErrorDialogOpen}\r\n        onClose = {handleEmailSentErrorDialogClose}\r\n        errorCode = {errorCode}\r\n        errorMessage = {errorMessage}\r\n        errorStack = {errorStack}\r\n        />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Contact","import React, { useEffect } from 'react'\r\nimport {BrowserRouter as Router, Switch, Route, useRouteMatch, useLocation, useHistory} from 'react-router-dom'\r\nimport {Grow, Grid} from '@material-ui/core'\r\nimport Home from './Routes/Home'\r\nimport About from './Routes/About'\r\nimport Projects from './Routes/Projects'\r\nimport Contact from './Routes/Contact'\r\n\r\nfunction RenderRoute({children, showAnimation}){\r\n    const [mount, setMount] = React.useState(false);\r\n    const RenderContent = () =>{\r\n        if (showAnimation === false){\r\n            return (\r\n                <Grid container>\r\n                    {children}\r\n                </Grid>\r\n            )\r\n        }\r\n        return (\r\n            <Grow in = {mount === true}>\r\n                <Grid container>\r\n                    {children}\r\n                </Grid>\r\n            </Grow>\r\n        );\r\n    }\r\n    useEffect(()=>{\r\n        setMount(true);\r\n        return function cleanup(){setMount(false)};\r\n    }, [children])\r\n    return(\r\n        <RenderContent/>\r\n    );\r\n}\r\n\r\nfunction RenderHome(){\r\n    const [mount, setMount] = React.useState(false);\r\n    useEffect(() => {\r\n        setMount(true);\r\n    })\r\n    return(\r\n        <Grow in = {mount === true}>\r\n            <Grid container style = {{marginTop: 100}}>\r\n                <Home/>\r\n            </Grid>\r\n        </Grow>   \r\n    )\r\n}\r\n\r\nfunction RenderAbout(){\r\n    const [mount, setMount] = React.useState(false);\r\n    useEffect(() => {\r\n        setMount(true);\r\n    })\r\n    return(\r\n        <Grow in = {mount === true}>\r\n            <Grid container style = {{marginTop: 100}}>\r\n                <About/>\r\n            </Grid>\r\n        </Grow>   \r\n    )\r\n}\r\nfunction RenderProjects(){\r\n    const [mount, setMount] = React.useState(false);\r\n    useEffect(() => {\r\n        setMount(true);\r\n    })\r\n    return(\r\n        <Grow in = {mount === true}>\r\n            <Grid container style = {{marginTop: 100}}>\r\n                <Projects/>\r\n            </Grid>\r\n        </Grow>   \r\n    )\r\n}\r\n\r\nfunction MainContentRouter(){\r\n    let routeMatch = useRouteMatch();\r\n    let routerLocation = useLocation();\r\n    const [routeName, setRouteName] = React.useState(\"/\");\r\n    return (\r\n        <Switch>\r\n            <Route path exact =\"/\">\r\n                <RenderRoute children = {<Home/>}/>\r\n            </Route>\r\n            <Route path =\"/about\">\r\n                <RenderRoute children = {<About/>}/>             \r\n            </Route>\r\n            {/* <Route path = \"/projects/:projectid\">\r\n                <RenderRoute showAnimation = {false} children = {<Projects/>}/>\r\n            </Route> */}\r\n            <Route path =\"/projects\">\r\n                <RenderRoute children = {<Projects/>}/>\r\n            </Route>\r\n            <Route path = \"/contact\">\r\n                <RenderRoute children = {<Contact/>}/>\r\n            </Route>\r\n        </Switch>\r\n    );\r\n}\r\n\r\nexport default MainContentRouter;","import React from 'react';\r\nimport {Route} from 'react-router-dom'\r\nimport './App.css';\r\nimport Title from './components/title'\r\nimport Welcome from './components/welcome'\r\nimport { Grid, AppBar, Box, MuiThemeProvider } from '@material-ui/core';\r\nimport RavensuAppBar from './components/RavensuAppBar'\r\nimport {makeStyles, createMuiTheme} from '@material-ui/core'\r\nimport Particles from 'react-particles-js'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\nimport TabPanel from './components/Routes/TabPanel'\r\nimport MainContentRouter from './components/MainContentRouter'\r\nimport {LanguageProvider} from './lang/LangaugeContext'\r\n\r\nconst useStyles = makeStyles(theme=>({\r\n  app:{\r\n    position: \"absolute\",\r\n    top: 0,\r\n    left: 0,\r\n    width: \"100%\",\r\n    [theme.breakpoints.down(\"sm\")]:{\r\n      alignItems: \"center\",\r\n      alignContent: \"center\",\r\n    }\r\n  },\r\n  siteContent:{\r\n    position: \"absolute\",\r\n    top: 128,\r\n    left: 0,\r\n    width: \"100%\",\r\n    height: \"100%\"\r\n  },\r\n}));\r\n\r\nfunction App() {\r\n  const classes = useStyles();\r\n  const theme = createMuiTheme({    \r\n    typography:{\r\n            fontFamily:[\r\n                '\"Baloo Thambi 2\"', '\"Fredoka One\"', '\"Balsamiq Sans\"', 'Bangers'\r\n            ]\r\n        }\r\n    }\r\n)\r\n  return (\r\n    <>\r\n    <div styles = {{zIndex: -1, position: \"absolute\", top: 0, left:0}} />\r\n    <div className = {classes.app}>\r\n      {/* <Particles params={{\r\n        \"particles\":{\r\n          \"number\":{\r\n            \"value\": 80\r\n          },\r\n        }\r\n        \r\n      }}/> */}\r\n      <div color = \"transparent\" className = {classes.app}>\r\n        <LanguageProvider>\r\n          <MuiThemeProvider theme = {theme}>\r\n            <RavensuAppBar/>\r\n            <MainContentRouter/>\r\n          </MuiThemeProvider>\r\n        </LanguageProvider>\r\n      </div>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport {BrowserRouter} from 'react-router-dom'\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}